# Copyright (C) 2002 Lorenzo Bettini <http://www.lorenzobettini.it>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

SUBDIRS = skels includes

SUFFIXES = .ggo

bin_PROGRAMS = gengen

noinst_LIBRARIES = libgengen.a

libgengen_a_AR = @ar_to_use@
libgengen_a_SOURCES = parser.yy scanner.ll yyerror.cc 		skelitemstruct.cc \
				skelstruct.hpp skelstruct.cc skelstruct_dbtab.cc normaltext.cc 		varitem.cc \
				skelfactory_cpp.cc skelstruct_cpp.cc fileutil.cc skelstruct_c.h 		skelstruct_c.cpp \
				skelfactory_c.h skelfactory_c.cpp skelstruct_strcnt.h 		skelstruct_strcnt.cpp \
				skelstruct_cstring.cpp gengen_cmdline_options.cc ifstruct.cpp 		expression.cpp skelitems.hpp \
				skelitems_dbtab.cc skelitems.cpp stringutil.cpp 		skelstruct_c_common.cpp withtokeninfo.h \
				errormanager.cpp skelfactory.cpp expressionwithop.cpp 	unaryexpression.cpp \
				binaryexpression.cpp expressionvisitor.cpp expressionvisitor_dbtab.cc \
				expressiongenerator_c.cpp expressionchecker.cpp expressiongenerator_cpp.cpp typemap.cpp utils.cpp

gengen_SOURCES = cmdline.c gengen.cc 

if NO_GENGETOPT
.ggo.c:
	touch $@
else
.ggo.c:
	$(GENGETOPT) --input $< --no-handle-version --no-handle-help
endif

if NO_DOUBLECPP
%.hpp: %.h
	touch $@
else
%.hpp: %.h
	$(DOUBLECPP) --output-source-ext cc --invade-target --input-header-ext h --output-header-ext hpp --output-source-suff=_dbtab --verbose --assume-virtual --excludeheaders=typemap.h -i $<
	touch $@
endif

gengen_LDADD = @LIBOBJS@ @LEXLIB@ libgengen.a

EXTRA_DIST = cmdline.h cmdline.ggo \
parser.h yyerror.h gnugetopt.h gengen_globals.h \
skelitemstruct.h skelstruct.h \
mainskelstruct.h normaltext.h varitem.h skelfactory.h skelfactory_cpp.h \
mainskelfactory.h skelstruct_cpp.h fileutil.h skelitemtype.h \
sourcename.h skelitemoptions.h my_sstream.h strdup.c \
gengen_cmdline_options.h \
$(BUILT_SOURCES)

EXTRA_PROGRAMS = test_replace test_exp_generator test_exp_checker

TESTS = test_exp_checker test_exp_generator

BUILT_SOURCES=skelstruct.hpp skelitems.hpp expressionvisitor.hpp

test_replace_SOURCES = test_replace.cc

test_exp_generator_SOURCES = test_exp_generator.cpp 
test_exp_generator_LDADD = $(gengen_LDADD)

test_exp_checker_SOURCES = test_exp_checker.cpp
test_exp_checker_LDADD = $(gengen_LDADD)

INCLUDES = -I@top_srcdir@/src/skels
noinst_HEADERS = skelstruct_cstring.h ifstruct.h expression.h skelitems.h \
							stringutil.h skelstruct_c_common.h errormanager.h streamstruct.h expressiontype.h \
							expressionwithop.h unaryexpression.h binaryexpression.h expressionvisitor.h \
						expressiongenerator_c.h asserttest.h expressionoperators.h expressionchecker.h \
			expressiongenerator_cpp.h typemap.h utils.h

# clean files generated by doublecpp
clean-doublecpp:
	rm -f *.hpp *_dbtab.cc

CLEANFILES = $(TESTS)
