/*
 * File automatically generated by
 * gengen 1.4.3rc by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef STRCNTFUNCTION_LUA_GEN_CLASS_H
#define STRCNTFUNCTION_LUA_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class strcntfunction_lua_gen_class
{
 protected:
  string compleninstr;
  string constlen;
  string genname;

 public:
  strcntfunction_lua_gen_class()
  {
  }
  
  strcntfunction_lua_gen_class(const string &_compleninstr, const string &_constlen, const string &_genname) :
    compleninstr (_compleninstr), constlen (_constlen), genname (_genname)
  {
  }

  virtual ~strcntfunction_lua_gen_class()
  {
  }

  static void
  generate_string(const string &s, ostream &stream, unsigned int indent)
  {
    if (!indent || s.find('\n') == string::npos)
      {
        stream << s;
        return;
      }

    string::size_type pos;
    string::size_type start = 0;
    string ind (indent, ' ');
    while ( (pos=s.find('\n', start)) != string::npos)
      {
        stream << s.substr (start, (pos+1)-start);
        start = pos+1;
        if (start+1 <= s.size ())
          stream << ind;
      }
    if (start+1 <= s.size ())
      stream << s.substr (start);
  }

  virtual void generate_compleninstr(ostream &stream, unsigned int indent) = 0;

  void set_compleninstr(const string &_compleninstr)
  {
    compleninstr = _compleninstr;
  }

  void set_constlen(const string &_constlen)
  {
    constlen = _constlen;
  }

  void set_genname(const string &_genname)
  {
    genname = _genname;
  }

  void generate_strcntfunction_lua(ostream &stream, unsigned int indent = 0)
  {
    string indent_str (indent, ' ');
    indent = 0;
  
    stream << "\n";
    stream << indent_str;
    stream << "function strcnt_";
    stream << genname;
    stream << "(record, indent)";
    stream << "\n";
    stream << indent_str;
    stream << "  local length = 0;";
    stream << "\n";
    stream << indent_str;
    indent = 2;
    stream << "  ";
    if (compleninstr.size () > 0)
      generate_string (compleninstr, stream, indent + indent_str.length ());
    else
      generate_compleninstr (stream, indent + indent_str.length ());
    indent = 0;
    stream << "\n";
    stream << indent_str;
    stream << "  return length + ";
    stream << constlen;
    stream << ";";
    stream << "\n";
    stream << indent_str;
    stream << "end";
    stream << "\n";
    stream << indent_str;
  }
};

#endif // STRCNTFUNCTION_LUA_GEN_CLASS_H
