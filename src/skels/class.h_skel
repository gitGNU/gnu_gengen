/*
 * File automatically generated by
 * @package@ @version@ @author@
 * @othercomments@
 */

#ifndef @classnameinclude@
#define @classnameinclude@

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class @classname@
{
 protected:
  @fields:method{iteration=true}@

 public:
  @classname@()@if@ hasinitializations @then@ :
    @initdefaults@
@else@
@ENDIF@
  {
  }
  @if@ memberwiseconstructor @then@
  @classname@(@params@) :
    @paramassignments@
  {
  }@endif@
@IF@ destructor @THEN@

  virtual ~@classname@()
  {
  }
@ENDIF@
@IF@ genstring @then@
  static void
  generate_string(const string &s, ostream &stream, unsigned int indent)
  {
    if (!indent || s.find('\n') == string::npos)
      {
        stream << s;
        return;
      }

    string::size_type pos;
    string::size_type start = 0;
    string ind (indent, ' ');
    while ( (pos=s.find('\n', start)) != string::npos)
      {
        stream << s.substr (start, (pos+1)-start);
        start = pos+1;
        if (start+1 <= s.size ())
          stream << ind;
      }
    if (start+1 <= s.size ())
      stream << s.substr (start);
  }
@ENDIF@

  @setmethods:method{iteration=true}@
  @generate:method@
};

#endif // @classnameinclude@
