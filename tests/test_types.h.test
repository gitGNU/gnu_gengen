/*
 * File automatically generated by
 * gengen  by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef TEST_TYPES_GEN_CLASS_H
#define TEST_TYPES_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class test_types_gen_class
{
 protected:
  bool mybool;
  int myint;
  string mystring;

 public:
  test_types_gen_class() :
    mybool (false), myint (0)
  {
  }
  
  test_types_gen_class(bool _mybool, int _myint, const string &_mystring) :
    mybool (_mybool), myint (_myint), mystring (_mystring)
  {
  }

  void set_mybool(bool _mybool)
  {
    mybool = _mybool;
  }

  void set_myint(int _myint)
  {
    myint = _myint;
  }

  void set_mystring(const string &_mystring)
  {
    mystring = _mystring;
  }

  void generate_test_types(ostream &stream, unsigned int indent = 0)
  {
    string indent_str (indent, ' ');
    indent = 0;
  
    stream << "#include <iostream>";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "using namespace std;";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "int main()";
    stream << "\n";
    stream << indent_str;
    stream << "{";
    stream << "\n";
    stream << indent_str;
    stream << "  cout << \"this is a string: \" << ";
    stream << mystring;
    stream << " << endl;";
    stream << "\n";
    stream << indent_str;
    stream << "  cout << \"this is an int: \" << ";
    stream << myint;
    stream << " << endl;";
    stream << "\n";
    stream << indent_str;
    stream << "  cout << \"this is a bool: \" << ";
    stream << std::boolalpha << mybool;
    stream << " << endl;";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "  return 0;";
    stream << "\n";
    stream << indent_str;
    stream << "}";
    stream << "\n";
    stream << indent_str;
  }
};

#endif // TEST_TYPES_GEN_CLASS_H
