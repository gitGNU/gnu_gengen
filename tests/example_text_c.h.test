/*
 * File automatically generated by
 * gengen  by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef EXAMPLE_TEXT_GEN_STRUCT_H
#define EXAMPLE_TEXT_GEN_STRUCT_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct example_text_gen_struct
{
  const char *generator;
  const char *name;
  const char *progname;
  const char *version;
};

void
generate_example_text(FILE *stream, struct example_text_gen_struct *record, unsigned int indent);

void
generatep_example_text(FILE *stream, unsigned int indent, const char *generator, const char *name, const char *progname, const char *version);

char *
genstring_example_text(struct example_text_gen_struct *record, unsigned int indent);

char *
genstringp_example_text(unsigned int indent, const char *generator, const char *name, const char *progname, const char *version);

int
strcnt_example_text(struct example_text_gen_struct *record, unsigned int indent);

void
init_example_text_gen_struct(struct example_text_gen_struct *record);

void
generate_example_text(FILE *stream, struct example_text_gen_struct *record, unsigned int indent)
{
  char *indent_str;
  unsigned int i;

  indent_str = (char *) malloc (indent + 1);
  for (i = 0; i < indent; ++i)
    indent_str[i] = ' ';
  indent_str[indent] = '\0';
  indent = 0;

  fprintf (stream, "%s", "This is ");
  fprintf (stream, "%s", (record->name ? record->name : ""));
  fprintf (stream, "%s", " generated by the program ");
  fprintf (stream, "%s", (record->progname ? record->progname : ""));
  fprintf (stream, "%s", ".");
  fprintf (stream, "%s", "\n");
  fprintf (stream, "%s", indent_str);
  fprintf (stream, "%s", "The code of ");
  fprintf (stream, "%s", (record->progname ? record->progname : ""));
  fprintf (stream, "%s", " that generated this text was");
  fprintf (stream, "%s", "\n");
  fprintf (stream, "%s", indent_str);
  fprintf (stream, "%s", "generated by ");
  fprintf (stream, "%s", (record->generator ? record->generator : ""));
  fprintf (stream, "%s", " version ");
  fprintf (stream, "%s", (record->version ? record->version : ""));
  fprintf (stream, "%s", ", made by");
  fprintf (stream, "%s", "\n");
  fprintf (stream, "%s", indent_str);
  fprintf (stream, "%s", "Lorenzo Bettini <foobar");
  fprintf (stream, "%s", "@");
  fprintf (stream, "%s", "foo.org>.");

  free (indent_str);
}

void
generatep_example_text(FILE *stream, unsigned int indent, const char *generator, const char *name, const char *progname, const char *version)
{
  struct example_text_gen_struct record;
  
  record.generator = generator;
  record.name = name;
  record.progname = progname;
  record.version = version;

  generate_example_text (stream, &record, indent);
}

char *
genstring_example_text(struct example_text_gen_struct *record, unsigned int indent)
{
  char *indent_str, *output;
  unsigned int i;
  int len;

  indent_str = (char *) malloc (indent + 1);
  for (i = 0; i < indent; ++i)
    indent_str[i] = ' ';
  indent_str[indent] = '\0';

  len = strcnt_example_text (record, indent);
  output = (char *) malloc (len + 1);
  output[0] = '\0';

  strcat (output, "This is ");
  if (record->name) strcat (output, record->name);
  strcat (output, " generated by the program ");
  if (record->progname) strcat (output, record->progname);
  strcat (output, ".");
  strcat (output, "\n");
  strcat (output, indent_str);
  strcat (output, "The code of ");
  if (record->progname) strcat (output, record->progname);
  strcat (output, " that generated this text was");
  strcat (output, "\n");
  strcat (output, indent_str);
  strcat (output, "generated by ");
  if (record->generator) strcat (output, record->generator);
  strcat (output, " version ");
  if (record->version) strcat (output, record->version);
  strcat (output, ", made by");
  strcat (output, "\n");
  strcat (output, indent_str);
  strcat (output, "Lorenzo Bettini <foobar");
  strcat (output, "@");
  strcat (output, "foo.org>.");

  free (indent_str);

  return output;
}

char *
genstringp_example_text(unsigned int indent, const char *generator, const char *name, const char *progname, const char *version)
{
  struct example_text_gen_struct record;
  
  record.generator = generator;
  record.name = name;
  record.progname = progname;
  record.version = version;

  return genstring_example_text (&record, indent);
}

int
strcnt_example_text(struct example_text_gen_struct *record, unsigned int indent)
{
  int length = 0;
  
  length += (record->name ? strlen (record->name) : 0) * 1;
  length += (record->progname ? strlen (record->progname) : 0) * 2;
  length += (record->generator ? strlen (record->generator) : 0) * 1;
  length += (record->version ? strlen (record->version) : 0) * 1;

  return length + 149;
}

void
init_example_text_gen_struct(struct example_text_gen_struct *record)
{
  record->generator = 0;
  record->name = 0;
  record->progname = 0;
  record->version = 0;
}

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif // EXAMPLE_TEXT_GEN_STRUCT_H
