/*
 * File automatically generated by
 * gengen  by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef TEST1_GEN_STRUCT_H
#define TEST1_GEN_STRUCT_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct test1_gen_struct
{
  const char *i;
};

void
generate_test1(FILE *stream, struct test1_gen_struct *record, unsigned int indent);

void
generatep_test1(FILE *stream, unsigned int indent, const char *i);

char *
genstring_test1(struct test1_gen_struct *record, unsigned int indent);

char *
genstringp_test1(unsigned int indent, const char *i);

int
strcnt_test1(struct test1_gen_struct *record, unsigned int indent);

void
init_test1_gen_struct(struct test1_gen_struct *record);

void
generate_test1(FILE *stream, struct test1_gen_struct *record, unsigned int indent)
{
  char *indent_str;
  unsigned int i;

  indent_str = (char *) malloc (indent + 1);
  for (i = 0; i < indent; ++i)
    indent_str[i] = ' ';
  indent_str[indent] = '\0';
  indent = 0;

  fprintf (stream, "%s", "if (");
  fprintf (stream, "%s", (record->i ? record->i : ""));
  fprintf (stream, "%s", " < 10)");
  fprintf (stream, "%s", "\n");
  fprintf (stream, "%s", indent_str);
  fprintf (stream, "%s", "  printf(\"the value of ");
  fprintf (stream, "%s", (record->i ? record->i : ""));
  fprintf (stream, "%s", " is %d\", ");
  fprintf (stream, "%s", (record->i ? record->i : ""));
  fprintf (stream, "%s", ");");

  free (indent_str);
}

void
generatep_test1(FILE *stream, unsigned int indent, const char *i)
{
  struct test1_gen_struct record;
  
  record.i = i;

  generate_test1 (stream, &record, indent);
}

char *
genstring_test1(struct test1_gen_struct *record, unsigned int indent)
{
  char *indent_str, *output;
  unsigned int i;
  int len;

  indent_str = (char *) malloc (indent + 1);
  for (i = 0; i < indent; ++i)
    indent_str[i] = ' ';
  indent_str[indent] = '\0';

  len = strcnt_test1 (record, indent);
  output = (char *) malloc (len + 1);
  output[0] = '\0';

  strcat (output, "if (");
  if (record->i) strcat (output, record->i);
  strcat (output, " < 10)");
  strcat (output, "\n");
  strcat (output, indent_str);
  strcat (output, "  printf(\"the value of ");
  if (record->i) strcat (output, record->i);
  strcat (output, " is %d\", ");
  if (record->i) strcat (output, record->i);
  strcat (output, ");");

  free (indent_str);

  return output;
}

char *
genstringp_test1(unsigned int indent, const char *i)
{
  struct test1_gen_struct record;
  
  record.i = i;

  return genstring_test1 (&record, indent);
}

int
strcnt_test1(struct test1_gen_struct *record, unsigned int indent)
{
  int length = 0;
  
  length += (record->i ? strlen (record->i) : 0) * 3;

  return length + 47;
}

void
init_test1_gen_struct(struct test1_gen_struct *record)
{
  record->i = 0;
}

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif // TEST1_GEN_STRUCT_H
