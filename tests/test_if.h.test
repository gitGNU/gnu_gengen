/*
 * File automatically generated by
 * gengen  by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef TEST_IF_GEN_CLASS_H
#define TEST_IF_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class test_if_gen_class
{
 protected:
  bool boolvar;
  int intvar;
  int intvarcomp;
  string mydef;
  string myvar;
  string stringvar;
  string stringvarcomp;

 public:
  test_if_gen_class() :
    boolvar (false), intvar (0), intvarcomp (0)
  {
  }
  
  test_if_gen_class(bool _boolvar, int _intvar, int _intvarcomp, const string &_mydef, const string &_myvar, const string &_stringvar, const string &_stringvarcomp) :
    boolvar (_boolvar), intvar (_intvar), intvarcomp (_intvarcomp), mydef (_mydef), myvar (_myvar), stringvar (_stringvar), stringvarcomp (_stringvarcomp)
  {
  }

  void set_boolvar(bool _boolvar)
  {
    boolvar = _boolvar;
  }

  void set_intvar(int _intvar)
  {
    intvar = _intvar;
  }

  void set_intvarcomp(int _intvarcomp)
  {
    intvarcomp = _intvarcomp;
  }

  void set_mydef(const string &_mydef)
  {
    mydef = _mydef;
  }

  void set_myvar(const string &_myvar)
  {
    myvar = _myvar;
  }

  void set_stringvar(const string &_stringvar)
  {
    stringvar = _stringvar;
  }

  void set_stringvarcomp(const string &_stringvarcomp)
  {
    stringvarcomp = _stringvarcomp;
  }

  void generate_test_if(ostream &stream, unsigned int indent = 0)
  {
    string indent_str (indent, ' ');
    indent = 0;
  
    stream << "#include <iostream>";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "using std::cout;";
    stream << "\n";
    stream << indent_str;
    stream << "using std::endl;";
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "#define MYVAR ";
    stream << myvar;
    stream << "\n";
    stream << indent_str;
    stream << "#define ";
    stream << mydef;
    stream << " ";
    stream << myvar;
    stream << "\n";
    stream << indent_str;
    stream << "\n";
    stream << indent_str;
    stream << "int";
    stream << "\n";
    stream << indent_str;
    stream << "main()";
    stream << "\n";
    stream << indent_str;
    stream << "{";
    stream << "\n";
    stream << indent_str;
    if (boolvar)
      {
        stream << "  cout << \"boolvar test\" << endl;";
        stream << "\n";
        stream << indent_str;
      }
    else
      {
        if (( ( intvar < intvarcomp ) || ( intvar == 0 ) ))
          {
            stream << "  cout << \"intvar test\" << endl;";
            stream << "\n";
            stream << indent_str;
          }
      }
    if (( ( stringvar < stringvarcomp ) || ( ( stringvar != "foo" ) && ( stringvar < "bara" ) ) ))
      {
        stream << "  cout << \"stringvar value: \" << ";
        stream << stringvar;
        stream << " << endl;";
        stream << "\n";
        stream << indent_str;
      }
    stream << "\n";
    stream << indent_str;
    stream << "  return 0;";
    stream << "\n";
    stream << indent_str;
    stream << "}";
    stream << "\n";
    stream << indent_str;
  }
};

#endif // TEST_IF_GEN_CLASS_H
