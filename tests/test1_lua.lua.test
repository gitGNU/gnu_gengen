
--[[
    File automatically generated by
    gengen  by Lorenzo Bettini 
    http://www.gnu.org/software/gengen
--]]

-- Field table
test1_gen_table = {
  i,
}


function generate_test1(stream, record, indent)
  local id = {}
  local indent_str = ""
  for i = 1, indent do
    id[#id + 1] = ' '
  end
  indent_str = table.concat(id)
  -- save context
  local ctx = io.output()
  io.output(stream)

  io.write("if (")
  io.write((record.i) and record.i or ""
)
  io.write(" < 10)")
  io.write("\n")
  io.write(indent_str)
  io.write("  printf(\"the value of ")
  io.write((record.i) and record.i or ""
)
  io.write(" is %d\", ")
  io.write((record.i) and record.i or ""
)
  io.write(");")

  -- restore context
  io.output(ctx)
end

function generatep_test1(stream, indent, i)
  record = {}
  
  record.i = i

  generate_test1(stream, record, indent)
end

function genstring_test1(record, indent)
  local id = {}
  local indent_str = ""
  local output = ""
  for i = 1, indent do
    id[#id + 1] = ' '
  end
  indent_str = table.concat(id)

  output = output .. "if ("
  if (record.i) then output = output .. record.i end
  output = output .. " < 10)"
  output = output .. "\n"
  output = output .. indent_str
  output = output .. "  printf(\"the value of "
  if (record.i) then output = output .. record.i end
  output = output .. " is %d\", "
  if (record.i) then output = output .. record.i end
  output = output .. ");"
  return output;
end

function genstringp_test1(indent, i)
  record = {}
  
  record.i = i

  return genstring_test1 (record, indent);
end

function strcnt_test1(record, indent)
  local length = 0;
  
  length = length + ((record.i) and string.len(record.i) or 0) * 3;

  return length + 47;
end

function init_test1_gen_table(record)
  record.i = nil
end

