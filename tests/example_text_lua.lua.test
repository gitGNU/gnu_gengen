
--[[
    File automatically generated by
    gengen 1.4.3rc by Lorenzo Bettini 
    http://www.gnu.org/software/gengen
--]]

-- Field table
example_text_gen_table = {
  generator,
  name,
  progname,
  version,
}


function generate_example_text(stream, record, indent)
  local id = {}
  local indent_str = ""
  for i = 1, indent do
    id[#id + 1] = ' '
  end
  indent_str = table.concat(id)
  -- save context
  local ctx = io.output()
  io.output(stream)

  io.write("This is ")
  io.write((record.name) and record.name or ""
)
  io.write(" generated by the program ")
  io.write((record.progname) and record.progname or ""
)
  io.write(".")
  io.write("\n")
  io.write(indent_str)
  io.write("The code of ")
  io.write((record.progname) and record.progname or ""
)
  io.write(" that generated this text was")
  io.write("\n")
  io.write(indent_str)
  io.write("generated by ")
  io.write((record.generator) and record.generator or ""
)
  io.write(" version ")
  io.write((record.version) and record.version or ""
)
  io.write(", made by")
  io.write("\n")
  io.write(indent_str)
  io.write("Lorenzo Bettini <foobar")
  io.write("@")
  io.write("foo.org>.")

  -- restore context
  io.output(ctx)
end

function generatep_example_text(stream, indent, generator, name, progname, version)
  record = {}
  
  record.generator = generator
  record.name = name
  record.progname = progname
  record.version = version

  generate_example_text(stream, record, indent)
end

function genstring_example_text(record, indent)
  local id = {}
  local indent_str = ""
  local output = ""
  for i = 1, indent do
    id[#id + 1] = ' '
  end
  indent_str = table.concat(id)

  output = output .. "This is "
  if (record.name) then output = output .. record.name end
  output = output .. " generated by the program "
  if (record.progname) then output = output .. record.progname end
  output = output .. "."
  output = output .. "\n"
  output = output .. indent_str
  output = output .. "The code of "
  if (record.progname) then output = output .. record.progname end
  output = output .. " that generated this text was"
  output = output .. "\n"
  output = output .. indent_str
  output = output .. "generated by "
  if (record.generator) then output = output .. record.generator end
  output = output .. " version "
  if (record.version) then output = output .. record.version end
  output = output .. ", made by"
  output = output .. "\n"
  output = output .. indent_str
  output = output .. "Lorenzo Bettini <foobar"
  output = output .. "@"
  output = output .. "foo.org>."
  return output;
end

function genstringp_example_text(indent, generator, name, progname, version)
  record = {}
  
  record.generator = generator
  record.name = name
  record.progname = progname
  record.version = version

  return genstring_example_text (record, indent);
end

function strcnt_example_text(record, indent)
  local length = 0;
  
  length = length + ((record.name) and string.len(record.name) or 0) * 1;
  length = length + ((record.progname) and string.len(record.progname) or 0) * 2;
  length = length + ((record.generator) and string.len(record.generator) or 0) * 1;
  length = length + ((record.version) and string.len(record.version) or 0) * 1;

  return length + 149;
end

function init_example_text_gen_table(record)
  record.generator = nil
  record.name = nil
  record.progname = nil
  record.version = nil
end

